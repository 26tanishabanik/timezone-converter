name: release

on:
  push:
    tags:
      - 'v*'

jobs:

  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            - Install or upgrade via pip: `pip install -U timezone-converter`
            - Visit the project on PyPi: https://pypi.org/project/timezone-converter
          draft: false
          prerelease: false

  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user

    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .

    - name: Save build artifacts name in env variables
      run: echo wheel=$(ls dist | head -1) >> $GITHUB_ENV; echo tarball=$(ls dist | tail -1) >> $GITHUB_ENV; cat $GITHUB_ENV

    - name: Publish distribution ðŸ“¦
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Upload binary wheel as Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./"$wheel"
        asset_name: "$wheel"
        asset_content_type: application/zip

    - name: Upload source tarball as Release Asset
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./"$tarball"
        asset_name: "$tarball"
        asset_content_type: application/gzip
